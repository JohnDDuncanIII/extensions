{
  "csvPath": "file:///home/user/sqmwork/sqlite-manager/testdata/",

  "csvArray": [
    {"remarks": "Use column names when importing from CSV if column names are first row; this is for importing into an existing table",
    "title": "255.csv",
    "file": "255.csv",
    "tableName": "255", "separator": ",", "encloser": "din",
    "bColNames": true, "ignoreTrailingDelimiter": false,
    "charset": "UTF-8"},

    {"remarks": "import of file containing Simplified Chinese (GB2312) characters",
    "title": "257.csv",
    "file": "257.csv",
    "tableName": "257", "separator": ",", "encloser": "\"",
    "bColNames": false, "ignoreTrailingDelimiter": false,
    "charset": "GB2312"},

    {"remarks": "import \"\" as an empty string",
    "title": "323.csv",
    "file": "323.csv",
    "tableName": "323", "separator": ",", "encloser": "\"",
    "bColNames": false, "ignoreTrailingDelimiter": false,
    "charset": "UTF-8"},

    {"remarks": "very long column values (so regexp cannot be used)",
    "title": "424.csv",
    "file": "424.csv",
    "tableName": "424", "separator": ",", "encloser": "\"",
    "bColNames": true, "ignoreTrailingDelimiter": false,
    "charset": "UTF-8"},

    {"remarks": "fields with single quotes should get quoted",
    "title": "460.csv",
    "file": "460.txt",
    "tableName": "460", "separator": "\t", "encloser": "N",
    "bColNames": false, "ignoreTrailingDelimiter": true,
    "charset": "ISO-8859-1"},

    {"remarks": "tab delimited; first row has 2 fields but later rows have 3 or 4; those will be rejected",
    "title": "affiliation_terms.csv",
    "file": "affiliation_terms.csv",
    "tableName": "affiliation_terms", "separator": "\t", "encloser": "N",
    "bColNames": false, "ignoreTrailingDelimiter": false,
    "charset": "ISO-8859-1"},

    {"remarks": "import of file containing blob values as X'...'",
    "title": "blob1.csv",
    "file": "blob1.csv",
    "tableName": "blob1", "separator": ",", "encloser": "\"",
    "bColNames": true, "ignoreTrailingDelimiter": false,
    "charset": "UTF-8"},

    {"remarks": "it should import 5 records with 5 columns each; first comma means first column is null; ,, means the field between them is null; if field begins with \" and doesn't end with \" it will cause non-import of that line; if \r or \n in quoted value, it should not be the end of the record; the line beginning with bad will fail to import because of space after \" in the third field",
    "title": "csvTest.csv",
    "file": "csvTest.csv",
    "tableName": "csvTest", "separator": ",", "encloser": "\"",
    "bColNames": false, "ignoreTrailingDelimiter": false,
    "charset": "UTF-8"},

    {"remarks": "",
    "title": "csvTest2.csv",
    "file": "csvTest2.csv",
    "tableName": "csvTest2", "separator": ",", "encloser": "\"",
    "bColNames": true, "ignoreTrailingDelimiter": false,
    "charset": "UTF-8"},

    {"remarks": "exported from Google docs",
    "title": "docs-google.csv",
    "file": "docs-google.csv",
    "tableName": "docs-google", "separator": ",", "encloser": "\"",
    "bColNames": false, "ignoreTrailingDelimiter": false,
    "charset": "UTF-8"},

    {"remarks": "",
    "title": "emptyLines.csv",
    "file": "emptyLines.csv",
    "tableName": "emptyLines", "separator": ",", "encloser": "N",
    "bColNames": false, "ignoreTrailingDelimiter": false,
    "charset": "UTF-8"},

    {"remarks": "",
    "title": "glossary.csv",
    "file": "glossary.csv",
    "tableName": "glossary", "separator": ",", "encloser": "\"",
    "bColNames": false, "ignoreTrailingDelimiter": false,
    "charset": "UTF-8"},

    {"remarks": "",
    "title": "hindi.csv",
    "file": "hindi.csv",
    "tableName": "hindi", "separator": ",", "encloser": "N",
    "bColNames": false, "ignoreTrailingDelimiter": false,
    "charset": "UTF-8"},

    {"remarks": "",
    "title": "try.csv",
    "file": "try.csv",
    "tableName": "try", "separator": ",", "encloser": "N",
    "bColNames": false, "ignoreTrailingDelimiter": false,
    "charset": "UTF-8"},

    {"remarks": "",
    "title": "utf16.csv",
    "file": "utf16.csv",
    "tableName": "utf16", "separator": ",", "encloser": "\"",
    "bColNames": false, "ignoreTrailingDelimiter": false,
    "charset": "UTF-16"},

    {"remarks": "",
    "title": "utf8.csv",
    "file": "utf8.csv",
    "tableName": "utf8", "separator": ",", "encloser": "\"",
    "bColNames": true, "ignoreTrailingDelimiter": false,
    "charset": "UTF-8"},

    {"remarks": "",
    "title": "filenameischinese.csv",
    "file": "一二三四五六七八九十.csv",
    "tableName": "一二三四五六七八九十", "separator": ",", "encloser": "\"",
    "bColNames": false, "ignoreTrailingDelimiter": false,
    "charset": "GB2312"},

    {"remarks": "values are separated by , followed by space and enclosed by \" except for numbers; Lines 5,20 are problem because they have , in some string values; the space after , gets counted as a part of the value",
    "title": "549.csv",
    "file": "549.csv",
    "tableName": "549", "separator": ",", "encloser": "\"",
    "bColNames": true, "ignoreTrailingDelimiter": false,
    "charset": "UTF-8"}
  ]
}
